/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.administracioneventos.ui.modelos;

import com.mycompany.administracioneventos.modelos.Evento;
import com.mycompany.administracioneventos.servicios.EventoServicio;
import com.mycompany.administracioneventos.ui.util.Alertas;
import com.mycompany.administracioneventos.util.ResultadoOperacion;
import java.awt.Frame;
import java.util.List;
import javax.swing.table.DefaultTableModel;

public class PanelEventos extends javax.swing.JPanel {

    private final EventoServicio eventoServicio = new EventoServicio();
    private final DefaultTableModel modelo = new DefaultTableModel(new Object[]{"Código", "Fecha", "Tipo", "Titulo", "Ubicacion", "Cupo Maximo"}, 0)
    {
        @Override
        public boolean isCellEditable(int r, int c) 
        {
            return false;
        }
    };
    
    public PanelEventos() 
    {
        initComponents();
        tablaEventos.setModel(modelo);
        tablaEventos.addMouseListener(new java.awt.event.MouseAdapter()
        {
            @Override
            public void mouseClicked(java.awt.event.MouseEvent e) 
            {
                if (e.getClickCount() == 2 && javax.swing.SwingUtilities.isLeftMouseButton(e)) 
                {
                    btnDetallesActionPerformed(null);
                }   
            }
        });
        tablaEventos.addKeyListener(new java.awt.event.KeyAdapter() 
        {
            @Override
            public void keyPressed(java.awt.event.KeyEvent e) 
            {
                if (e.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) 
                {
                    e.consume();
                    btnDetallesActionPerformed(null);
                }
            }
        });
        tablaEventos.setRowHeight(22);
        cargarEventos();
    }
    
    private void cargarEventos()
    {
        modelo.setRowCount(0);
        try
        {
            List<Evento> lista = eventoServicio.obtenerEventos();
            for (Evento evento : lista)
            {
                modelo.addRow(new Object[] {evento.getCodigo(), evento.getFecha() != null ? evento.getFecha().toString() : "", 
                    evento.getTipo() != null ? evento.getTipo().name() : "", evento.getTitulo(), evento.getUbicacion(), evento.getCupoMaximo()});
            }
        }
        catch (Exception ex)
        {
            Alertas.error(this, "Error al cargar eventos: " + ex.getMessage());
        }
    }
    
    private void buscarPorCodigo()
    {
        String codigoEvento = txtCodigoBuscar.getText().trim();
        modelo.setRowCount(0);
        if(codigoEvento.isEmpty())
        {
            cargarEventos();
            return;
        }
        try
        {
            Evento evento = eventoServicio.buscarEventoPorCodigo(codigoEvento);
            if (evento != null)
            {
                modelo.addRow(new Object[]{evento.getCodigo(), evento.getFecha() != null ? evento.getFecha().toString() : "", 
                    evento.getTipo() != null ? evento.getTipo().name() : "", evento.getTitulo(), evento.getUbicacion(), evento.getCupoMaximo()});
            }
            else
            {
                Alertas.error(this, "No se encontró el evento con el codigo: " + codigoEvento);
                cargarEventos();
            }
        }
        catch (Exception ex)
        {
            Alertas.error(this, "Error al buscar evento: " + ex.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtCodigoBuscar = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        btnNuevo = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnRefrescar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaEventos = new javax.swing.JTable();
        btnDetalles = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(370, 400));

        txtCodigoBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodigoBuscarActionPerformed(evt);
            }
        });

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnRefrescar.setText("Refrescar");
        btnRefrescar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefrescarActionPerformed(evt);
            }
        });

        jLabel1.setText("Código del evento:");

        tablaEventos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tablaEventos.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jScrollPane1.setViewportView(tablaEventos);

        btnDetalles.setText("Detalles");
        btnDetalles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetallesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnNuevo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnEditar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnRefrescar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnEliminar))
                            .addComponent(txtCodigoBuscar))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnBuscar)
                            .addComponent(btnDetalles))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCodigoBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBuscar)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEditar)
                    .addComponent(btnRefrescar)
                    .addComponent(btnEliminar)
                    .addComponent(btnNuevo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnDetalles)
                .addGap(24, 24, 24)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtCodigoBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodigoBuscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCodigoBuscarActionPerformed

    private void btnRefrescarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefrescarActionPerformed
        cargarEventos();
    }//GEN-LAST:event_btnRefrescarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        buscarPorCodigo();
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        DialogoEvento dialogo = new DialogoEvento((Frame) javax.swing.SwingUtilities.getWindowAncestor(this), null);
        dialogo.setLocationRelativeTo(this);
        dialogo.setVisible(true);
        if(dialogo.isGuardado())
        {
            cargarEventos();
        }
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        int fila = tablaEventos.getSelectedRow();
        if (fila < 0)
        {
            Alertas.informacion(this, "Seleccione un evento.");
            return;
        }
        String codigo = (String) modelo.getValueAt(fila, 0);
        try
        {
            Evento eventos = eventoServicio.buscarEventoPorCodigo(codigo);
            if (eventos == null)
            {
                Alertas.error(this, "No se encontró el evento.");
                return;
            }
            DialogoEvento dialogo = new DialogoEvento((Frame) javax.swing.SwingUtilities.getWindowAncestor(this), eventos);
            dialogo.setLocationRelativeTo(this);
            dialogo.setVisible(true);
            if(dialogo.isGuardado())
            {
                cargarEventos();
            }
        }
        catch (Exception ex) 
        {
            Alertas.error(this, "Error al editar: " + ex.getMessage());
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        int fila = tablaEventos.getSelectedRow();
        if (fila < 0)
        {
            Alertas.informacion(this, "Seleccione un evento."); 
            return;
        }
        String codigo = (String) modelo.getValueAt(fila, 0);
        if (!Alertas.confirmar(this, "¿Eliminar el evento " + codigo + "?")) return;
        try
        {
            ResultadoOperacion res = eventoServicio.eliminarEventoSeguro(codigo);
            if (res.isOk())
            {
                Alertas.informacion(this, res.getMensaje());
                cargarEventos();
            }
            else
            {
                Alertas.error(this, res.getMensaje());
            }
        }
        catch (Exception ex) 
        {
            Alertas.error(this, "Error al eliminar: " + ex.getMessage());
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnDetallesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetallesActionPerformed
        int fila = tablaEventos.getSelectedRow();
        if (fila < 0) 
        {
            Alertas.informacion(this, "Seleccione un evento.");
            return;
        }
        String codigo = (String) modelo.getValueAt(fila, 0);
        try
        {
            Evento evento = eventoServicio.buscarEventoPorCodigo(codigo);
            if (evento == null) 
            {
                Alertas.error(this, "No se encontró el evento.");
                return;
            }
            DialogoEventoDetalle dialogo = new DialogoEventoDetalle((Frame) javax.swing.SwingUtilities.getWindowAncestor(this), evento);
            dialogo.setLocationRelativeTo(this);
            dialogo.setVisible(true);
            cargarEventos();
        }
        catch (Exception ex) 
        {
            Alertas.error(this, "Error al abrir detalles: " + ex.getMessage());
        }
    }//GEN-LAST:event_btnDetallesActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnDetalles;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnRefrescar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaEventos;
    private javax.swing.JTextField txtCodigoBuscar;
    // End of variables declaration//GEN-END:variables
}
