/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.administracioneventos.ui.modelos;

import com.mycompany.administracioneventos.modelos.Participante;
import com.mycompany.administracioneventos.servicios.ParticipanteServicio;
import com.mycompany.administracioneventos.ui.util.Alertas;
import com.mycompany.administracioneventos.util.ResultadoOperacion;
import java.awt.Frame;
import java.util.List;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author mauricio
 */
public class PanelParticipantes extends javax.swing.JPanel 
{
    private final ParticipanteServicio servicioParticipante = new ParticipanteServicio();
    private final DefaultTableModel modelo = new DefaultTableModel(new Object[]{"Correo", "Nombre completo", "Tipo", "Institución"}, 0)
    {
        @Override
        public boolean isCellEditable(int r, int c)
        {
            return false;
        }
    };
    
    public PanelParticipantes() 
    {
        initComponents();
        tablaParticipantes.setModel(modelo);
        tablaParticipantes.setRowHeight(22);
        cargarParticipantes();
    }
    
    private void cargarParticipantes()
    {
        modelo.setRowCount(0);
        try
        {
            List<Participante> lista = servicioParticipante.obtenerParticipantes();
            for (Participante participante : lista)
            {
                modelo.addRow(new Object[] {participante.getCorreo(), participante.getNombreCompleto(), participante.getTipo() != null ? participante.getTipo().name() : "", 
                    participante.getInstitucion()});
            }
        }
        catch (Exception ex)
        {
            Alertas.error(this, "Error al cargar eventos: " + ex.getMessage());
        }
    }
    
    private void buscarPorCorreo()
    {
        String correo = txtBuscarCorreo.getText().trim();
        modelo.setRowCount(0);
        if (correo.isEmpty())
        {
            cargarParticipantes();
            return;
        }   
        try
        {
            Participante participante = servicioParticipante.buscarParticipantePorCorreo(correo);
            if (participante != null) 
            {
                modelo.addRow(new Object[]{participante.getCorreo(), participante.getNombreCompleto(), participante.getTipo() != null ? participante.getTipo().name() : "", 
                    participante.getInstitucion()});
            }
            else
            {
                Alertas.informacion(this, "No se encontró el participante con correo: " + correo);
                cargarParticipantes();
            }
        }
        catch (Exception ex)
        {
            Alertas.error(this, "Error al buscar: " + ex.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtBuscarCorreo = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        btnNuevo = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnRefrescar = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaParticipantes = new javax.swing.JTable();

        jLabel1.setText("Correo:");

        txtBuscarCorreo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscarCorreoActionPerformed(evt);
            }
        });

        btnBuscar.setText("Buscar");
        btnBuscar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnBuscar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnNuevo.setText("Nuevo");
        btnNuevo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnNuevo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnEditar.setText("Editar");
        btnEditar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEditar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEliminar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnRefrescar.setText("Refrescar");
        btnRefrescar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnRefrescar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnRefrescar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefrescarActionPerformed(evt);
            }
        });

        tablaParticipantes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaParticipantes.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jScrollPane1.setViewportView(tablaParticipantes);

        jScrollPane3.setViewportView(jScrollPane1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBuscarCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBuscar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnNuevo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEditar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEliminar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRefrescar))
                    .addComponent(jScrollPane3))
                .addGap(16, 16, 16))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(txtBuscarCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnNuevo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEditar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRefrescar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        buscarPorCorreo();
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        DialogoParticipante dialogo = new DialogoParticipante((Frame) SwingUtilities.getWindowAncestor(this), null);
        dialogo.setLocationRelativeTo(this);
        dialogo.setVisible(true);
        if(dialogo.isGuardado())
        {
            cargarParticipantes();
        }
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        int fila = tablaParticipantes.getSelectedRow();
        if (fila < 0)
        {
             Alertas.informacion(this, "Seleccione un participante.");
             return;
        }
        String correo = (String) modelo.getValueAt(fila, 0);
        try
        {
            Participante participante = servicioParticipante.buscarParticipantePorCorreo(correo);
            if (participante == null)
            {
                Alertas.error(this, "No se encontró el participante.");
                return;
            }
            DialogoParticipante dialogo = new DialogoParticipante((Frame) SwingUtilities.getWindowAncestor(this), participante);
            dialogo.setLocationRelativeTo(this);
            dialogo.setVisible(true);
            if(dialogo.isGuardado())
            {
                cargarParticipantes();
            }
        }
        catch (Exception ex)
        {
            Alertas.error(this, "Error al editar: " + ex.getMessage());
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        int fila = tablaParticipantes.getSelectedRow();
        if (fila < 0)
        {
            Alertas.informacion(this, "Seleccione un participante.");
            return;
        }
        String correo = (String) modelo.getValueAt(fila, 0);
        if (!Alertas.confirmar(this, "¿Eliminar el participante " + correo + "?")) return;
        try
        {
            ResultadoOperacion ro = servicioParticipante.eliminarParticipanteSeguro(correo);
            if(ro.isOk())
            {
                Alertas.informacion(this, ro.getMensaje());
                cargarParticipantes();
            }
            else
            {
                Alertas.error(this, ro.getMensaje());
            }
        }
        catch (Exception ex)
        {
            Alertas.error(this, "Error al eliminar: " + ex.getMessage());
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnRefrescarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefrescarActionPerformed
        cargarParticipantes();
    }//GEN-LAST:event_btnRefrescarActionPerformed

    private void txtBuscarCorreoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscarCorreoActionPerformed
        buscarPorCorreo();
    }//GEN-LAST:event_txtBuscarCorreoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnRefrescar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tablaParticipantes;
    private javax.swing.JTextField txtBuscarCorreo;
    // End of variables declaration//GEN-END:variables
}
